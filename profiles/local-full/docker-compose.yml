version: "3.5"
services:

  keycloak:
    container_name: keycloak
    build:
      context: .
      dockerfile: ../../keycloak/Dockerfile
    environment:
      JAVA_OPTS_APPEND: "-javaagent:/tmp/opentelemetry-javaagent.jar"
      OTEL_SERVICE_NAME: keycloak
      OTEL_TRACES_EXPORTER: otlp
      # OTEL_METRICS_EXPORTER: none
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel_collector:4317
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - 8787:8787
    volumes:
      - ../../keycloak/config/realms/import:/opt/keycloak/data/import
    entrypoint: [
      "/opt/keycloak/bin/kc.sh",
      "start-dev",
      "--import-realm",
      "--hostname-url=http://localhost:8787",
      "--http-port=8787"
    ]
    healthcheck:
      # TODO: curl no longer installed on keycloak, and not clear why this test works.
      test: ["CMD", "ls", "-al", "/etc/hostname"]
      interval: 30s
      timeout: 30s
      retries: 15

  backend:
    depends_on:
      otel_collector:
        condition: service_started
      keycloak:
        condition: service_healthy
    image: products-backend
    container_name: backend
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER:
      OAUTH2_CLIENT_REGISTRATION_LOGIN_CLIENT_ID:
      OAUTH2_CLIENT_REGISTRATION_LOGIN_CLIENT_SECRET:
      OAUTH2_CLIENT_REGISTRATION_LOGIN_SCOPE:
      OAUTH2_CLIENT_REGISTRATION_LOGIN_REDIRECT_URI:
      OAUTH2_CLIENT_REGISTRATION_LOGIN_POST_LOGOUT_REDIRECT_URI:
      SESSION_SECRET:
    ports:
      - 3000:3000

  frontend:
    depends_on:
      - backend
      - otel_collector
    image: products-frontend
    container_name: frontend
    ports:
      - 4200:4200

  otel_collector:
    image: otel/opentelemetry-collector-contrib:0.76.1
    container_name: otel_collector
    volumes:
      - ../../otel-collector/config:/etc/otel-collector
    command: --config /etc/otel-collector/otel-collector-config.yml
    ports:
      - 4317:4317
      - 4318:4318
    depends_on:
      - jaeger
      - prometheus

  prometheus:
    image: prom/prometheus:v2.43.1
    container_name: prometheus
    volumes:
      - ../../prometheus/config:/etc/prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=exemplar-storage'

  jaeger:
    image: jaegertracing/all-in-one:1.45.0
    container_name: jaeger
    volumes:
      - ../../jaeger/config:/etc/jaeger/jaeger
    command: --query.ui-config /etc/jaeger/jaeger/jaeger-ui.json
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    ports:
      - 16686:16686

  grafana:
    image: grafana/grafana:9.5.1
    container_name: grafana
    volumes:
      - ../../grafana/config:/etc/grafana/provisioning
    environment:
      - GF_SERVER_HTTP_PORT=2345
      # - GF_SECURITY_ADMIN_USER=admin
      # - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GRAFANA_OPSGENIE_API_KEY=${GRAFANA_OPSGENIE_API_KEY}
    # expose:
    #   - 2345
    ports:
      - 2345:2345
    depends_on:
      - jaeger
      - prometheus

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.23.0
    container_name: blackbox-exporter
    ports:
      - 9115:9115
    command:
      - --config.file=/etc/blackbox-exporter/blackbox-exporter.yml
    volumes:
      - ../../blackbox-exporter/config:/etc/blackbox-exporter

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ../../alertmanager/config:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'